{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/ability-form/ability-form.component.ts","webpack:///src/app/components/ability-form/ability-form.component.html","webpack:///src/app/components/ability-modal/ability-modal.component.ts","webpack:///src/app/components/ability-modal/ability-modal.component.html","webpack:///src/app/components/ability/ability.component.ts","webpack:///src/app/components/ability/ability.component.html","webpack:///src/app/components/diploma-form/diploma-form.component.ts","webpack:///src/app/components/diploma-form/diploma-form.component.html","webpack:///src/app/components/diplomas/diplomas.component.ts","webpack:///src/app/components/diplomas/diplomas.component.html","webpack:///src/app/components/experiences/experiences.component.ts","webpack:///src/app/components/experiences/experiences.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/main/main.component.ts","webpack:///src/app/components/main/main.component.html","webpack:///src/app/components/project-form/project-form.component.ts","webpack:///src/app/components/project-form/project-form.component.html","webpack:///src/app/components/project-modal/project-modal.component.ts","webpack:///src/app/components/project-modal/project-modal.component.html","webpack:///src/app/components/project/project.component.ts","webpack:///src/app/components/project/project.component.html","webpack:///src/app/components/projects/projects.component.ts","webpack:///src/app/components/projects/projects.component.html","webpack:///src/app/components/subject-form/subject-form.component.ts","webpack:///src/app/components/subject-form/subject-form.component.html","webpack:///src/app/components/subject/subject.component.ts","webpack:///src/app/components/subject/subject.component.html","webpack:///src/app/components/subjects/subjects.component.ts","webpack:///src/app/components/subjects/subjects.component.html","webpack:///src/app/components/technology-form/technology-form.component.ts","webpack:///src/app/components/technology-form/technology-form.component.html","webpack:///src/app/core/api/ability-api.service.ts","webpack:///src/app/core/api/auth-api.service.ts","webpack:///src/app/core/http/auth-interceptor.service.ts","webpack:///src/app/core/services/auth.service.ts","webpack:///src/app/core/services/diplomas.service.ts","webpack:///src/app/core/services/files.service.ts","webpack:///src/app/core/services/project.service.ts","webpack:///src/app/core/services/subject.service.ts","webpack:///src/app/core/services/technology.service.ts","webpack:///src/app/material.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///util.inspect (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","entryComponents","AbilityFormComponent","dialogRef","subjectService","fileService","data","snackBar","fileToUpload","ability","abilityId","subjectId","save","result","close","console","log","color","undefined","upload","image","addAbility","toPromise","open","setTimeout","dismiss","files","item","handleFileInput","handleClickSave","AbilityModalComponent","service","technologyService","dialog","deleted","subject","logged","subscribe","technologies","filter","technology","width","afterClosed","push","closeModale","AbilityComponent","document","elementRef","trimedName","name","replace","AbilityModalData","emit","showModale","Document","Ability","Technology","DiplomaFormComponent","route","router","diploma","snapshot","params","find","create","navigate","update","submit","DiplomasComponent","authService","loaded","findAll","diplomas","d","splice","indexOf","Diploma","school","startYear","endYear","logo","description","ExperiencesComponent","LoginComponent","auth","error","login","password","authenticate","cancel","handleLogin","MainComponent","createMenuOpen","isAuthenticated","subjects","Array","response","querySelector","scrollIntoView","behavior","subjectComponent","refreshAuth","projects","addProject","showConnectDialog","scrollTo","ProjectFormComponent","projectService","abilityService","project","addedTechnology","addedAbility","getAbilities","abilities","addproject","projectId","removeAbility","a","technologyId","removeTechnology","t","addTechnology","ProjectModalComponent","ProjectComponent","Project","icon","git","ProjectsComponent","SubjectFormComponent","SubjectComponent","dialogref","length","Subject","SubjectsComponent","TechnologyFormComponent","AbilityApiService","authorization","providedIn","createAbilityApi","setEndpoint","build","AuthApiService","createAuthApi","AuthInterceptorService","next","token","sessionStorage","getItem","clone","setHeaders","Authorization","handle","pipe","handleAuthError","err","status","message","AuthService","authApi","username","dto","DiplomasService","http","post","get","put","FilesService","file","formData","FormData","append","responseType","ProjectService","p","idAbility","idTechnology","SubjectService","s","TechnologyService","MaterialModule","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {LoginComponent} from './components/login/login.component';\r\nimport {MainComponent} from './components/main/main.component';\r\nimport {SubjectFormComponent} from './components/subject-form/subject-form.component';\r\nimport {AbilityFormComponent} from './components/ability-form/ability-form.component';\r\nimport {TechnologyFormComponent} from './components/technology-form/technology-form.component';\r\nimport {ProjectFormComponent} from './components/project-form/project-form.component';\r\nimport {DiplomaFormComponent} from './components/diploma-form/diploma-form.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: 'login', component: LoginComponent},\r\n  {path: '', component: MainComponent},\r\n  {path: 'subject/:id', component: SubjectFormComponent},\r\n  {path: 'subject', component: SubjectFormComponent},\r\n  {path: 'subject/:subjectId/ability', component: AbilityFormComponent},\r\n  {path: 'subject/:subjectId/ability/:abilityId', component: AbilityFormComponent},\r\n  {path: 'ability/:abilityId/technology', component: TechnologyFormComponent},\r\n  {path: 'ability/:abilityId/technology/:technologyId', component: TechnologyFormComponent},\r\n  {path: 'project', component: ProjectFormComponent},\r\n  {path: 'project/:id', component: ProjectFormComponent},\r\n  {path: 'diploma', component: DiplomaFormComponent},\r\n  {path: 'diploma/:id', component: DiplomaFormComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'eportfolio-front-angular';\r\n}\r\n","<router-outlet></router-outlet>\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {MaterialModule} from './material.module';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport {ProjectsComponent} from './components/projects/projects.component';\r\nimport {LoginComponent} from './components/login/login.component';\r\nimport {SubjectFormComponent} from './components/subject-form/subject-form.component';\r\nimport {MainComponent} from './components/main/main.component';\r\nimport {ProjectComponent} from './components/project/project.component';\r\nimport {AbilityComponent} from './components/ability/ability.component';\r\nimport {SubjectsComponent} from './components/subjects/subjects.component';\r\nimport {SubjectComponent} from './components/subject/subject.component';\r\nimport {AbilityFormComponent} from './components/ability-form/ability-form.component';\r\nimport {TechnologyFormComponent} from './components/technology-form/technology-form.component';\r\nimport {ProjectFormComponent} from './components/project-form/project-form.component';\r\nimport {ExperiencesComponent} from './components/experiences/experiences.component';\r\nimport {AbilityModalComponent} from './components/ability-modal/ability-modal.component';\r\nimport {DiplomaFormComponent} from './components/diploma-form/diploma-form.component';\r\nimport {DiplomasComponent} from './components/diplomas/diplomas.component';\r\nimport {AuthInterceptorService} from './core/http/auth-interceptor.service';\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {RouterModule} from '@angular/router';\r\nimport {MarkdownModule} from 'ngx-markdown';\r\nimport {ProjectModalComponent} from './components/project-modal/project-modal.component';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MccColorPickerModule} from 'material-community-components';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SubjectComponent,\r\n    SubjectsComponent,\r\n    AbilityComponent,\r\n    ProjectsComponent,\r\n    ProjectComponent,\r\n    SubjectFormComponent,\r\n    LoginComponent,\r\n    MainComponent,\r\n    AbilityFormComponent,\r\n    TechnologyFormComponent,\r\n    ProjectFormComponent,\r\n    DiplomasComponent,\r\n    ExperiencesComponent,\r\n    DiplomaFormComponent,\r\n    AbilityModalComponent,\r\n    ProjectModalComponent\r\n  ],\r\n  imports: [\r\n    MatSnackBarModule,\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    AppRoutingModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    FlexLayoutModule,\r\n    MarkdownModule.forRoot(),\r\n    MccColorPickerModule\r\n  ],\r\n  providers: [{provide: HTTP_INTERCEPTORS, useClass: AuthInterceptorService, multi: true}],\r\n  bootstrap: [AppComponent],\r\n\r\n  entryComponents: [AbilityModalComponent,\r\n    ProjectModalComponent,\r\n    LoginComponent,\r\n    AbilityFormComponent,\r\n    SubjectFormComponent,\r\n    TechnologyFormComponent\r\n  ]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {Ability} from '../ability/ability.component';\r\nimport {SubjectService} from '../../core/services/subject.service';\r\n// import {AbilityService} from '../../core/services/ability.service';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport {FilesService} from '../../core/services/files.service';\r\n\r\n@Component({\r\n  selector: 'app-ability-form',\r\n  templateUrl: './ability-form.component.html',\r\n  styleUrls: ['./ability-form.component.css']\r\n})\r\nexport class AbilityFormComponent implements OnInit {\r\n\r\n  private subjectId: number;\r\n  private abilityId: number;\r\n  public ability: Ability;\r\n  public fileToUpload: File = null;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AbilityFormComponent>,\r\n    private subjectService: SubjectService,\r\n    // private abilityService: AbilityService,\r\n    private fileService: FilesService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    if (this.data.ability) {\r\n      this.ability = this.data.ability;\r\n      this.abilityId = this.ability.id;\r\n    } else {\r\n      this.ability = new Ability();\r\n    }\r\n    this.subjectId = this.data.subjectId;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  handleClickSave() {\r\n    this.save().then(result => this.dialogRef.close(result));\r\n  }\r\n\r\n  async save() {\r\n    console.log(this.ability.color);\r\n    // Create\r\n    if (this.ability.id === null || this.ability.id === undefined) {\r\n      if (this.fileToUpload) {\r\n        this.ability.image = await this.fileService.upload(this.fileToUpload);\r\n      }\r\n      this.ability = await this.subjectService.addAbility(this.subjectId, this.ability).toPromise();\r\n      this.snackBar.open(`Ability created ${this.ability.id}`);\r\n\r\n    } else { // Update\r\n\r\n      if (this.fileToUpload) {\r\n        this.ability.image = await this.fileService.upload(this.fileToUpload);\r\n      }\r\n      // this.ability = await this.abilityService.update(this.ability).toPromise();\r\n      this.snackBar.open(`Ability updated ${this.ability.id}`);\r\n    }\r\n\r\n    setTimeout(() => {\r\n        this.snackBar.dismiss();\r\n      },\r\n      3000);\r\n\r\n    return this.ability;\r\n  }\r\n\r\n  handleFileInput(files: FileList) {\r\n    this.fileToUpload = files.item(0);\r\n  }\r\n}\r\n","<h1 mat-dialog-title>Ajouter ou modifier une compétence</h1>\r\n\r\n<mat-dialog-content>\r\n  <mat-form-field>\r\n    <input matInput type=\"text\" id=\"name\" placeholder=\"Nom\" [(ngModel)]=\"ability.name\" name=\"name\">\r\n  </mat-form-field>\r\n\r\n  <input type=\"file\" placeholder=\"Image\" id=\"image\" (change)=\"handleFileInput($event.target.files)\" name=\"image\">\r\n\r\n  <mcc-color-picker (change)=\"this.ability.color = $event\"></mcc-color-picker>\r\n\r\n</mat-dialog-content>\r\n\r\n\r\n<div mat-dialog-actions>\r\n  <button type=\"button\" mat-raised-button color=\"primary\"\r\n          (click)=\"handleClickSave()\">Sauvegarder\r\n  </button>\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\r\nimport {Ability, AbilityModalData, Technology} from '../ability/ability.component';\r\nimport {Subject} from '../subject/subject.component';\r\nimport {TechnologyService} from '../../core/services/technology.service';\r\nimport {AbilityFormComponent} from '../ability-form/ability-form.component';\r\nimport {TechnologyFormComponent} from '../technology-form/technology-form.component';\r\nimport {AbilityApiService} from \"../../core/api/ability-api.service\";\r\n\r\n@Component({\r\n  selector: 'app-ability-modal',\r\n  templateUrl: './ability-modal.component.html',\r\n  styleUrls: ['./ability-modal.component.css']\r\n})\r\nexport class AbilityModalComponent implements OnInit {\r\n  public subject: Subject;\r\n  public ability: Ability;\r\n  public logged: boolean;\r\n  public deleted = false;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AbilityModalComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: AbilityModalData,\r\n    private service: AbilityApiService,\r\n    private technologyService: TechnologyService,\r\n    public dialog: MatDialog\r\n  ) {\r\n    this.ability = data.ability;\r\n    this.subject = data.subject;\r\n    this.logged = data.logged;\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  handleDelete() {\r\n    // this.service.delete(this.ability.id).subscribe(() => {\r\n    //     this.deleted = true;\r\n    //     this.dialogRef.close(this.deleted);\r\n    //   }\r\n    // );\r\n  }\r\n\r\n  deleteTechnology(id: number) {\r\n    this.technologyService.delete(id).subscribe(() => {\r\n      this.ability.technologies = this.ability.technologies.filter(e => e.id !== id);\r\n    });\r\n  }\r\n\r\n  handleClickEditTechnology(technology: Technology) {\r\n    const dialogRef = this.dialog.open(TechnologyFormComponent, {\r\n      width: '250px',\r\n      data: {\r\n        abilityId: this.subject.id,\r\n        technology\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      technology = result;\r\n    });\r\n  }\r\n\r\n  handleClickAdd() {\r\n    const dialogRef = this.dialog.open(TechnologyFormComponent, {\r\n      width: '250px',\r\n      data: {\r\n        abilityId: this.ability.id\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.ability.technologies.push(result);\r\n    });\r\n  }\r\n\r\n  closeModale() {\r\n    this.dialogRef.close(this.deleted);\r\n  }\r\n\r\n  handleClickEdit() {\r\n    const dialogRef = this.dialog.open(AbilityFormComponent, {\r\n      width: '250px',\r\n      data: {\r\n        subjectId: this.subject.id,\r\n        ability: this.ability\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div mat-dialog-title>{{ability.name}}</div>\r\n<div mat-dialog-content>\r\n\r\n\r\n  <mat-list>\r\n    <mat-list-item *ngFor=\"let technology of ability.technologies\">\r\n\r\n      <img mat-list-avatar src=\"{{technology.image}}\" alt=\"{{technology.name}}\"/>\r\n      <h4 mat-line>\r\n\r\n        {{technology.name}}\r\n      </h4>\r\n      <div>\r\n\r\n        <a mat-line (click)=\"handleClickEditTechnology(technology)\" *ngIf=\"logged\" mat-icon-button aria-label=\"edit\">\r\n          <mat-icon>edit</mat-icon>\r\n        </a>\r\n\r\n        <button mat-line *ngIf=\"logged\" mat-icon-button aria-label=\"delete\"\r\n                (click)=\"deleteTechnology(technology.id)\">\r\n          <mat-icon>delete</mat-icon>\r\n        </button>\r\n\r\n      </div>\r\n\r\n    </mat-list-item>\r\n  </mat-list>\r\n\r\n\r\n</div>\r\n<div mat-dialog-actions>\r\n  <div *ngIf=\"logged\">\r\n    <button mat-button (click)=\"handleClickAdd()\">AJOUTER</button>\r\n  </div>\r\n  <div *ngIf=\"logged\">\r\n    <button mat-button (click)=\"handleClickEdit()\">MODIFIER</button>\r\n  </div>\r\n  <div *ngIf=\"logged\">\r\n    <button mat-button (click)=\"handleDelete()\">SUPPRIMER</button>\r\n  </div>\r\n\r\n\r\n  <button type=\"button\" mat-button class=\"close\" (click)=\"closeModale()\">FERMER\r\n  </button>\r\n</div>\r\n","import {Component, ElementRef, EventEmitter, Inject, Input, OnInit, Output} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {Subject} from '../subject/subject.component';\r\nimport {AbilityModalComponent} from '../ability-modal/ability-modal.component';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {AbilityApiService} from \"../../core/api/ability-api.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-ability',\r\n  templateUrl: './ability.component.html',\r\n  styleUrls: ['./ability.component.css']\r\n})\r\nexport class AbilityComponent implements OnInit {\r\n\r\n  @Input() ability: Ability;\r\n\r\n  @Input() subject: Subject;\r\n  @Input() public logged: boolean;\r\n\r\n  @Output() delete: EventEmitter<Ability> = new EventEmitter<Ability>();\r\n\r\n  public trimedName: string;\r\n\r\n  constructor(@Inject(DOCUMENT) private document: Document,\r\n              private service: AbilityApiService,\r\n              private elementRef: ElementRef,\r\n              public dialog: MatDialog\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.trimedName = this.ability.name.replace(/[^a-z]/gi, '');\r\n  }\r\n\r\n  showModale() {\r\n    const dialogRef = this.dialog.open(AbilityModalComponent, {\r\n      width: '500px',\r\n      data: new AbilityModalData(this.ability, this.subject, this.logged)\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      if (result) {\r\n        this.delete.emit(this.ability);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport class Ability {\r\n  constructor(\r\n    public id?: number,\r\n    public name?: string,\r\n    public color?: string,\r\n    public image?: string,\r\n    public technologies?: Array<Technology>) {\r\n  }\r\n}\r\n\r\nexport class Technology {\r\n  constructor(\r\n    public id?: number,\r\n    public name?: string,\r\n    public image?: string\r\n  ) {\r\n  }\r\n}\r\n\r\nexport class AbilityModalData {\r\n  constructor(public ability: Ability,\r\n              public subject: Subject,\r\n              public logged: boolean) {\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","<span class=\"mdl-chip mdl-chip--contact\"\r\n      [style.background-color]=\"ability.color\" (click)=\"showModale()\">\r\n    <img class=\"mdl-chip__contact\" src=\"{{ability.image}}\" alt=\"{{ability.name}}\"/>\r\n    <span class=\"mdl-chip__text\">{{ability.name}}</span>\r\n</span>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Diploma} from '../diplomas/diplomas.component';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {DiplomasService} from '../../core/services/diplomas.service';\r\n\r\n@Component({\r\n  selector: 'app-diploma-form',\r\n  templateUrl: './diploma-form.component.html',\r\n  styleUrls: ['./diploma-form.component.css']\r\n})\r\nexport class DiplomaFormComponent implements OnInit {\r\n\r\n  private id: number;\r\n  public diploma: Diploma;\r\n\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private service: DiplomasService\r\n  ) {\r\n    this.diploma = new Diploma();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.id = this.route.snapshot.params['id'];\r\n    if (this.id !== null && this.id !== undefined) {\r\n      this.service.find(this.id).subscribe(result => {\r\n        this.diploma = result;\r\n      });\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    if (this.diploma.id == null) {\r\n      this.service.create(this.diploma).subscribe(result => {\r\n        this.router.navigate(['/']);\r\n      });\r\n    } else {\r\n      this.service.update(this.diploma).subscribe(result => {\r\n\r\n        this.router.navigate(['/']);\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div fxLayout=\"row wrap\" fxFlexAlign=\"center\">\r\n  <div fxFlex.gt-md=\"35%\"></div>\r\n  <mat-card fxFlex.gt-md=\"30%\">\r\n    <mat-card-header>\r\n      <mat-card-title>Ajouter ou modifier un diplôme</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <mat-form-field>\r\n        <input matInput type=\"text\" id=\"name\" placeholder=\"Nom\" [(ngModel)]=\"diploma.name\" name=\"name\">\r\n      </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <input matInput type=\"text\" id=\"school\" placeholder=\"Ecole\" [(ngModel)]=\"diploma.school\" name=\"school\">\r\n      </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <input matInput type=\"number\" id=\"startYear\" placeholder=\"Année de début\" [(ngModel)]=\"diploma.startYear\"\r\n               name=\"startYear\"/>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <input matInput type=\"number\" id=\"endYear\" placeholder=\"Année de fin\" [(ngModel)]=\"diploma.endYear\"\r\n               name=\"endYear\"/>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <input matInput type=\"text\" placeholder=\"Logo\" id=\"logo\" [(ngModel)]=\"diploma.logo\" name=\"logo\">\r\n      </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <textarea matInput type=\"text\" id=\"description\" placeholder=\"Description\" [(ngModel)]=\"diploma.description\"\r\n                  name=\"description\"></textarea>\r\n      </mat-form-field>\r\n\r\n    </mat-card-content>\r\n\r\n    <mat-card-actions>\r\n      <button mat-raised-button color=\"primary\"\r\n              (click)=\"submit()\">Sauvegarder\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {DiplomasService} from '../../core/services/diplomas.service';\r\nimport {AuthService} from '../../core/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-diplomas',\r\n  templateUrl: './diplomas.component.html',\r\n  styleUrls: ['./diplomas.component.css']\r\n})\r\nexport class DiplomasComponent implements OnInit {\r\n\r\n  public diplomas: Array<Diploma>;\r\n  loaded: boolean;\r\n\r\n  @Input() logged: boolean;\r\n\r\n  constructor(private service: DiplomasService, private authService: AuthService) {\r\n    this.loaded = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.service.findAll().subscribe(result => {\r\n      this.diplomas = result;\r\n      this.loaded = true;\r\n    });\r\n  }\r\n\r\n  delete(diploma: Diploma) {\r\n    this.service.delete(diploma.id).subscribe(() => {\r\n      for (const d of this.diplomas) {\r\n        if (d.id === diploma.id) {\r\n          this.diplomas.splice(this.diplomas.indexOf(diploma));\r\n          break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport class Diploma {\r\n  constructor(\r\n    public id?: number,\r\n    public name?: string,\r\n    public school?: string,\r\n    public startYear?: number,\r\n    public endYear?: number,\r\n    public logo?: string,\r\n    public description?: string\r\n  ) {\r\n  }\r\n}\r\n","<div class=\"diplomas\">\r\n  <h1>Diplômes</h1>\r\n  <br><br>\r\n  <mat-spinner *ngIf=\"!loaded\"></mat-spinner>\r\n  <div fxLayout=\"row wrap\">\r\n    <div *ngFor=\"let diploma of diplomas\" fxFlex.gt-md=\"33.3%\">\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <div mat-card-avatar class=\"diploma-logo\" [style.background-image]=\"'url(' + diploma.logo +')'\">\r\n          </div>\r\n          <mat-card-title>{{diploma.name}} - {{diploma.school}}</mat-card-title>\r\n          <mat-card-subtitle>  {{diploma.startYear}} - {{diploma.endYear}}</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <markdown ngPreserveWhitespaces>\r\n            {{diploma.description}}\r\n          </markdown>\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n          <a mat-button *ngIf=\"logged\" routerLink=\"/diploma/{{diploma.id}}\">MODIFIER</a>\r\n          <a mat-button *ngIf=\"logged\" (click)=\"delete(diploma)\">SUPPRIMER</a>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-experiences',\r\n  templateUrl: './experiences.component.html',\r\n  styleUrls: ['./experiences.component.css']\r\n})\r\nexport class ExperiencesComponent implements OnInit {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<p>\r\n  experiences works!\r\n</p>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from '../../core/services/auth.service';\r\nimport {MatDialogRef} from '@angular/material/dialog';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public login: string;\r\n  public password: string;\r\n  public error: string;\r\n\r\n  constructor(\r\n    private auth: AuthService,\r\n    public dialogRef: MatDialogRef<LoginComponent>,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    this.error = '';\r\n    this.login = '';\r\n    this.password = '';\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  handleLogin() {\r\n    this.auth.authenticate(this.login, this.password).then(result => {\r\n\r\n      this.dialogRef.close();\r\n      this.snackBar.open('Connecté !');\r\n\r\n      // sessionStorage.setItem('token', result.headers.get('Authorization'));\r\n      // setTimeout(() => {\r\n      //     this.snackBar.dismiss();\r\n      //   },\r\n      //   3000);\r\n\r\n    });\r\n  }\r\n\r\n  cancel() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<h1 mat-dialog-title>Connexion</h1>\r\n\r\n<mat-dialog-content>\r\n  <mat-form-field>\r\n    <input matInput placeholder=\"Identifiant\" type=\"text\" id=\"login\" [(ngModel)]=\"login\" name=\"login\">\r\n  </mat-form-field>\r\n  <br>\r\n\r\n  <mat-form-field>\r\n    <input matInput placeholder=\"Mot de passe\" type=\"password\" id=\"password\" [(ngModel)]=\"password\" name=\"password\">\r\n  </mat-form-field>\r\n  <br>\r\n\r\n</mat-dialog-content>\r\n<div mat-dialog-actions>\r\n  <button mat-button color=\"primary\" (click)=\"cancel()\">Annuler</button>\r\n  <button mat-raised-button color=\"primary\" (click)=\"handleLogin()\">Connexion</button>\r\n  {{error}}\r\n</div>\r\n","import {Component, Inject, OnInit, ViewChild} from '@angular/core';\r\nimport {Subject} from '../subject/subject.component';\r\nimport {SubjectService} from '../../core/services/subject.service';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {AuthService} from '../../core/services/auth.service';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {LoginComponent} from '../login/login.component';\r\nimport {SubjectsComponent} from '../subjects/subjects.component';\r\nimport {SubjectFormComponent} from '../subject-form/subject-form.component';\r\nimport {ProjectFormComponent} from '../project-form/project-form.component';\r\nimport {ProjectsComponent} from '../projects/projects.component';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.css']\r\n})\r\nexport class MainComponent implements OnInit {\r\n  public subjects: Array<Subject>;\r\n  logged = false;\r\n  createMenuOpen = false;\r\n\r\n  subjectComponent: SubjectsComponent;\r\n\r\n  @ViewChild(SubjectsComponent, {static: true})\r\n  set subjectsComponent(subjects: SubjectsComponent) {\r\n    this.subjectComponent = subjects;\r\n  }\r\n\r\n  projects: ProjectsComponent;\r\n\r\n  @ViewChild(ProjectsComponent, {static: true})\r\n  set projectsComponent(projects: ProjectsComponent) {\r\n    this.projects = projects;\r\n  }\r\n\r\n  constructor(\r\n    private service: SubjectService,\r\n    @Inject(DOCUMENT) private document: Document,\r\n    private auth: AuthService,\r\n    public dialog: MatDialog\r\n  ) {\r\n    this.logged = auth.isAuthenticated();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.subjects = new Array<Subject>();\r\n    this.service.findAll().subscribe(response => {\r\n      this.subjects = response;\r\n    });\r\n  }\r\n\r\n  scrollTo(name: string) {\r\n    this.document.querySelector(`#${name}`).scrollIntoView({behavior: 'smooth'});\r\n  }\r\n\r\n  toggleMenu() {\r\n    this.createMenuOpen = !this.createMenuOpen;\r\n  }\r\n\r\n  showConnectDialog() {\r\n    if (!this.logged) {\r\n      const dialogRef = this.dialog.open(LoginComponent, {\r\n        width: '250px'\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        this.logged = this.auth.isAuthenticated();\r\n        this.subjectComponent.refreshAuth();\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClickCreateSubject() {\r\n    this.dialog.open(SubjectFormComponent, {\r\n      width: '250px',\r\n      data: {}\r\n    });\r\n  }\r\n\r\n  handleClickCreateProject() {\r\n    const dialogRef = this.dialog.open(ProjectFormComponent, {\r\n      width: '400px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.projects.addProject(result);\r\n    });\r\n  }\r\n\r\n}\r\n","<body>\r\n\r\n<header>\r\n  <video autoplay loop>\r\n    <source src=\"../../../assets/video.mp4\" type=\"video/mp4\">\r\n  </video>\r\n  <mat-card>\r\n    <img alt=\"arsene\" class=\"profile-image\" src=\"/frontend/eportfolio-frontend/src/assets/img/arsene.png\" (click)=\"showConnectDialog()\"/>\r\n    <mat-card-content>\r\n      <h4>Arsène Lapostolet</h4>\r\n      <p>Etudiant en Informatique</p>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</header>\r\n<nav>\r\n  <div class=\"menu-button\" fxLayout=\"row wrap\" fxLayoutGap.xs=\"0\" fxLayoutAlign=\"space-around\">\r\n    <div fxFlex.md=\"20%\" fxFlex.xs=\"50%\" fxFlex.sm=\"50%\"><img src=\"/frontend/eportfolio-frontend/src/assets/img/abilities.png\" class=\"header-icons\"/>\r\n      <button (click)=\"scrollTo('abilities')\"\r\n              data-target=\"abilities\"\r\n              mat-raised-button color=\"primary\">Compétences\r\n      </button>\r\n    </div>\r\n    <div fxFlex.md=\"20%\" fxFlex.xs=\"50%\" fxFlex.sm=\"50%\"><img src=\"/frontend/eportfolio-frontend/src/assets/img/projects.png\" class=\"header-icons\"/>\r\n      <button (click)=\"scrollTo('projects')\"\r\n              data-target=\"projects\"\r\n              mat-raised-button color=\"primary\">Projets\r\n      </button>\r\n    </div>\r\n    <div fxFlex.md=\"20%\" fxFlex.xs=\"50%\" fxFlex.sm=\"50%\"><img src=\"/frontend/eportfolio-frontend/src/assets/img/diploma.png\" class=\"header-icons\"/>\r\n      <button (click)=\"scrollTo('diplomas')\"\r\n              data-target=\"diplomas\"\r\n              mat-raised-button color=\"primary\">Diplomes\r\n      </button>\r\n    </div>\r\n\r\n    <div fxFlex.md=\"20%\" fxFlex.xs=\"50%\" fxFlex.sm=\"50%\"><img src=\"/frontend/eportfolio-frontend/src/assets/img/cv.png\" class=\"header-icons\"/>\r\n      <a href=\"/frontend/eportfolio-frontend/src/assets/LAPOSTOLET%20Arsene-CV-LSI.pdf\"\r\n         data-target=\"\" mat-raised-button color=\"primary\">CV\r\n      </a>\r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n<a *ngIf=\"logged && createMenuOpen\" routerLink=\"/diploma\" matTooltip=\"Créer un diplôme\" matTooltipPosition=\"before\"\r\n   class=\"create-button create-button-diploma\" mat-fab color=\"accent\">\r\n  <mat-icon>school</mat-icon>\r\n</a>\r\n<a *ngIf=\"logged && createMenuOpen\" (click)=\"handleClickCreateProject()\" matTooltip=\"Créer un projet\"\r\n   matTooltipPosition=\"before\"\r\n   class=\"create-button create-button-project\" mat-fab color=\"accent\">\r\n  <mat-icon>star</mat-icon>\r\n</a>\r\n<a *ngIf=\"logged && createMenuOpen\" (click)=\"handleClickCreateSubject()\" matTooltip=\"Créer un sujet\"\r\n   matTooltipPosition=\"before\"\r\n   class=\"create-button create-button-subject\" mat-fab color=\"accent\">\r\n  <mat-icon>build</mat-icon>\r\n</a>\r\n<button *ngIf=\"logged\" (click)=\"toggleMenu()\" class=\"create-button create-button-toggle\" mat-fab color=\"primary\">\r\n  <mat-icon>{{createMenuOpen ? 'close' : 'add'}}</mat-icon>\r\n</button>\r\n\r\n<section id=\"abilities\">\r\n  <app-subjects></app-subjects>\r\n</section>\r\n\r\n<section id=\"projects\">\r\n  <app-projects [logged]=\"logged\"></app-projects>\r\n</section>\r\n\r\n<section id=\"diplomas\">\r\n  <app-diplomas [logged]=\"logged\"></app-diplomas>\r\n</section>\r\n\r\n<section id=\"experience\">\r\n\r\n</section>\r\n\r\n<section id=\"hobbies\">\r\n\r\n</section>\r\n</body>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {Project} from '../project/project.component';\r\nimport {SubjectService} from '../../core/services/subject.service';\r\nimport {ProjectService} from '../../core/services/project.service';\r\nimport {Subject} from '../subject/subject.component';\r\nimport {TechnologyService} from '../../core/services/technology.service';\r\nimport {Ability, Technology} from '../ability/ability.component';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport {AbilityApiService} from \"../../core/api/ability-api.service\";\r\n\r\n@Component({\r\n  selector: 'app-project-form',\r\n  templateUrl: './project-form.component.html',\r\n  styleUrls: ['./project-form.component.css']\r\n})\r\nexport class ProjectFormComponent implements OnInit {\r\n\r\n  public project: Project;\r\n  public subjects: Array<Subject>;\r\n  public addedAbility: Ability;\r\n  public addedTechnology: Technology;\r\n  public abilities: Array<Ability>;\r\n  public technologies: Array<Technology>;\r\n\r\n  constructor(\r\n    private subjectService: SubjectService,\r\n    private projectService: ProjectService,\r\n    private abilityService: AbilityApiService,\r\n    @Inject(MAT_DIALOG_DATA) public data: Project,\r\n    private technologyService: TechnologyService,\r\n    private snackBar: MatSnackBar,\r\n    public dialogRef: MatDialogRef<ProjectFormComponent>\r\n  ) {\r\n    if (data) {\r\n      this.project = data;\r\n    } else {\r\n      this.project = new Project();\r\n    }\r\n    this.addedTechnology = new Technology();\r\n    this.addedAbility = new Ability();\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.abilityService.getAbilities(\"\").then(result => {\r\n      this.abilities = result.data;\r\n    });\r\n\r\n    this.technologyService.findAll().subscribe(result => {\r\n      this.technologies = result;\r\n    });\r\n\r\n    this.subjectService.findAll().subscribe(result => {\r\n      this.subjects = result;\r\n    });\r\n  }\r\n\r\n  handleClickSave() {\r\n    if (this.project.subject === null || this.project.subject === undefined) {\r\n      this.snackBar.open('Please set a subject');\r\n      setTimeout(() => {\r\n        this.snackBar.dismiss();\r\n      }, 2000);\r\n    } else {\r\n      if (this.project.id == null) {\r\n        this.subjectService.addproject(this.project.subject.id, this.project).subscribe(result => {\r\n          this.dialogRef.close(result);\r\n        });\r\n      } else {\r\n        this.projectService.update(this.project).subscribe(result => {\r\n          this.dialogRef.close(result);\r\n        });\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  removeAbility(projectId: number, abilityId: number) {\r\n    this.projectService.removeAbility(projectId, abilityId).subscribe(result => {\r\n      for (const a of this.project.abilities) {\r\n        if (a.id === abilityId) {\r\n          this.project.abilities.splice(this.project.abilities.indexOf(a));\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  removeTechnology(projectId: number, technologyId: number) {\r\n    this.projectService.removeTechnology(projectId, technologyId).subscribe(result => {\r\n      for (const t of this.project.technologies) {\r\n        if (t.id === technologyId) {\r\n          this.project.technologies.splice(this.project.technologies.indexOf(t));\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  addAbility() {\r\n    this.projectService.addAbility(this.project.id, this.addedAbility).subscribe(result => {\r\n      if (!this.project.abilities) {\r\n        this.project.abilities = new Array<Ability>();\r\n      }\r\n      this.project.abilities.push(this.addedAbility);\r\n    });\r\n  }\r\n\r\n  addTechnology() {\r\n    this.projectService.addTechnology(this.project.id, this.addedTechnology).subscribe(result => {\r\n      if (!this.project.technologies) {\r\n        this.project.technologies = new Array<Technology>();\r\n      }\r\n      this.project.technologies.push(this.addedTechnology);\r\n    });\r\n  }\r\n}\r\n","<div mat-dialog-title>\r\n  <h4>Ajouter ou modifier un projet</h4>\r\n</div>\r\n<mat-dialog-content>\r\n  <mat-form-field>\r\n    <input matInput type=\"text\" id=\"name\" placeholder=\"Nom\" [(ngModel)]=\"project.name\" name=\"name\">\r\n  </mat-form-field>\r\n\r\n  <mat-form-field>\r\n    <input matInput type=\"text\" id=\"color\" placeholder=\"Couleur\" [(ngModel)]=\"project.color\" name=\"color\">\r\n  </mat-form-field>\r\n\r\n  <mat-form-field>\r\n    <input matInput type=\"text\" id=\"description\" placeholder=\"Description\" [(ngModel)]=\"project.description\"\r\n           name=\"description\">\r\n  </mat-form-field>\r\n\r\n\r\n  <mat-form-field>\r\n    <input matInput type=\"text\" id=\"git\" placeholder=\"Git\" [(ngModel)]=\"project.git\" name=\"git\">\r\n  </mat-form-field>\r\n\r\n  <mat-form-field>\r\n    <input matInput type=\"text\" id=\"icon\" placeholder=\"Icone\" [(ngModel)]=\"project.icon\" name=\"icon\">\r\n  </mat-form-field>\r\n\r\n  <div *ngIf=\"this.project.id === null || this.project.id === undefined\">\r\n    <h4>Subject</h4>\r\n    <mat-form-field>\r\n      <mat-label>Sujet</mat-label>\r\n      <mat-select [(ngModel)]=\"project.subject\">\r\n        <mat-option *ngFor=\"let subject of subjects\" [value]=\"subject\">\r\n          {{subject.name}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div *ngIf=\"this.project.id !== null && this.project.id !== undefined\">\r\n        <span *ngFor=\"let ability of project.abilities\">{{ability.name}} <i class=\"fa fa-trash-alt\"\r\n                                                                            (click)=\"removeAbility(project.id,ability.id)\"></i><br></span>\r\n    <span *ngFor=\"let technology of project.technologies\">{{technology.name}} <i class=\"fa fa-trash-alt\"\r\n                                                                                 (click)=\"removeTechnology(project.id,technology.id)\"></i><br></span>\r\n\r\n    <h4>Ajouter une compétence</h4>\r\n    <mat-form-field>\r\n      <mat-label>Compétence</mat-label>\r\n      <mat-select [(value)]=\"addedAbility\">\r\n        <mat-option *ngFor=\"let ability of abilities\" [value]=\"ability\">\r\n          {{ability.name}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <button mat-raised-button color=\"primary\" (click)=\"addAbility()\">Ajouter\r\n      la compétence\r\n    </button>\r\n\r\n    <h4>Ajouter une technologie</h4>\r\n    <mat-form-field>\r\n      <mat-label>Technologie</mat-label>\r\n      <mat-select [(value)]=\"addedTechnology\">\r\n        <mat-option *ngFor=\"let technology of technologies\" [value]=\"technology\">\r\n          {{technology.name}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <button mat-raised-button color=\"primary\" (click)=\"addTechnology()\">\r\n      Ajouter la technologie\r\n    </button>\r\n  </div>\r\n\r\n\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions>\r\n  <button type=\"button\" mat-raised-button color=\"primary\"\r\n          (click)=\"handleClickSave()\">Sauvegarder\r\n  </button>\r\n</mat-dialog-actions>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\r\nimport {ProjectService} from '../../core/services/project.service';\r\nimport {AuthService} from '../../core/services/auth.service';\r\nimport {Project} from '../project/project.component';\r\nimport {ProjectFormComponent} from '../project-form/project-form.component';\r\n\r\n@Component({\r\n  selector: 'app-project-modal',\r\n  templateUrl: './project-modal.component.html',\r\n  styleUrls: ['./project-modal.component.css']\r\n})\r\nexport class ProjectModalComponent implements OnInit {\r\n\r\n  public logged: boolean;\r\n  public project: Project;\r\n  public deleted = false;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ProjectModalComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: Project,\r\n              private service: ProjectService,\r\n              private auth: AuthService,\r\n              public dialog: MatDialog) {\r\n    this.logged = this.auth.isAuthenticated();\r\n    this.project = data;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  handleDelete(id: number) {\r\n    this.service.delete(id).subscribe(() => {\r\n      this.deleted = true;\r\n      this.dialogRef.close(true);\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n  handleClickEdit() {\r\n    const dialogRef = this.dialog.open(ProjectFormComponent, {\r\n      width: '400px',\r\n      data: this.project\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.project = result;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div mat-dialog-title>\r\n  <h4>\r\n    {{project.name}}\r\n  </h4>\r\n</div>\r\n<div mat-dialog-content>\r\n  <div class=\"project-description\">\r\n    <p>\r\n      <markdown ngPreserveWhitespaces>{{project.description}}</markdown>\r\n    </p>\r\n    <a *ngIf=\"project.git\" href=\"{{project.git}}\"\r\n       mat-raised-button color=\"primary\">GitLab</a>\r\n  </div>\r\n  <div class=\"specs\">\r\n    <img class=\"spec\" *ngFor=\"let ability of project.abilities\" src=\"{{ability.image}}\"/>\r\n    <img class=\"spec\" *ngFor=\"let technology of project.technologies\" src=\"{{technology.image}}\"/>\r\n  </div>\r\n</div>\r\n<div mat-dialog-actions>\r\n\r\n  <a mat-button *ngIf=\"logged\" (click)=\"handleClickEdit()\">MODIFIER</a>\r\n\r\n  <a mat-button *ngIf=\"logged\" (click)=\"handleDelete(project.id)\" (click)=\"close()\">SUPPRIMER</a>\r\n\r\n  <button mat-button class=\"close\" [mat-dialog-close]=\"this.deleted\">FERMER</button>\r\n\r\n\r\n</div>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {Subject} from '../subject/subject.component';\r\nimport {Ability, Technology} from '../ability/ability.component';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {ProjectModalComponent} from '../project-modal/project-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-project',\r\n  templateUrl: './project.component.html',\r\n  styleUrls: ['./project.component.css']\r\n})\r\nexport class ProjectComponent implements OnInit {\r\n\r\n  @Input() project: Project;\r\n  @Input() logged: boolean;\r\n  public trimedName: string;\r\n\r\n  @Output() delete: EventEmitter<Project> = new EventEmitter<Project>();\r\n\r\n  constructor(public dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.trimedName = this.project.name.replace(/[^a-z]/gi, '');\r\n  }\r\n\r\n  showModale() {\r\n    const dialogRef = this.dialog.open(ProjectModalComponent, {\r\n      width: '500px',\r\n      data: this.project\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.delete.emit(this.project);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport class Project {\r\n  constructor(\r\n    public id?: number,\r\n    public name?: string,\r\n    public icon?: string,\r\n    public description?: string,\r\n    public git?: string,\r\n    public color?: string,\r\n    public subject?: Subject,\r\n    public abilities?: Array<Ability>,\r\n    public technologies?: Array<Technology>\r\n  ) {\r\n  }\r\n}\r\n","<div class=\"tile\" [ngStyle]=\"{'background-color' : project.color}\">\r\n\r\n  <div class=\"textTile \">\r\n    <button\r\n      mat-raised-button color=\"primary\"\r\n      (click)=\"showModale()\"\r\n    >DETAILS\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"tileLegend \">{{ project.name}}<br>\r\n    <i class=\"{{ project.icon }}\"></i>\r\n  </div>\r\n\r\n\r\n</div>\r\n\r\n\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {ProjectService} from '../../core/services/project.service';\r\nimport {Project} from '../project/project.component';\r\n\r\n@Component({\r\n  selector: 'app-projects',\r\n  templateUrl: './projects.component.html',\r\n  styleUrls: ['./projects.component.css']\r\n})\r\nexport class ProjectsComponent implements OnInit {\r\n\r\n  public projects: Array<Project>;\r\n  loaded: boolean;\r\n  @Input() logged: boolean;\r\n\r\n  constructor(private service: ProjectService) {\r\n    this.loaded = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.projects = new Array<Project>();\r\n    this.service.findAll().subscribe(result => {\r\n      this.projects = result;\r\n      this.loaded = true;\r\n    });\r\n  }\r\n\r\n  addProject(project: Project) {\r\n    if (project) {\r\n      this.projects.push(project);\r\n    }\r\n  }\r\n\r\n  handleDeleteProject(project: Project) {\r\n    this.projects = this.projects.filter(e => e.id !== project.id);\r\n  }\r\n}\r\n","<div class=\"projects\">\r\n  <h1>Projets</h1>\r\n  <mat-spinner *ngIf=\"!loaded\"></mat-spinner>\r\n  <div fxLayout=\"row wrap\" fxLayoutGap.xs=\"0\" fxLayoutAlign=\"center\">\r\n\r\n    <app-project (delete)=\"handleDeleteProject($event)\"\r\n                 [logged]=\"logged\" fxFlex=\"25%\" fxFlex.xs=\"100%\"\r\n                 *ngFor=\"let project of projects\"\r\n                 [project]=\"project\"></app-project>\r\n\r\n  </div>\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {Subject} from '../subject/subject.component';\r\nimport {SubjectService} from '../../core/services/subject.service';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-subject-form',\r\n  templateUrl: './subject-form.component.html',\r\n  styleUrls: ['./subject-form.component.css']\r\n})\r\nexport class SubjectFormComponent implements OnInit {\r\n\r\n  public id: string;\r\n  public subject: Subject;\r\n\r\n  constructor(\r\n    private service: SubjectService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<SubjectFormComponent>,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    if (this.data.subject) {\r\n      this.subject = this.data.subject;\r\n    } else {\r\n      this.subject = new Subject();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n  }\r\n\r\n  submit() {\r\n    if (this.subject.id == null) {\r\n      this.service.create(this.subject).subscribe(result => {\r\n        this.snackBar.open('Subject created');\r\n      });\r\n    } else {\r\n      this.service.update(this.subject).subscribe(result => {\r\n        this.snackBar.open('Subject updated');\r\n      });\r\n    }\r\n    this.dialogRef.close();\r\n    setTimeout(() => {\r\n        this.snackBar.dismiss();\r\n      },\r\n      3000);\r\n\r\n  }\r\n}\r\n","<h1 mat-dialog-title>Ajouter ou modifier un sujet</h1>\r\n\r\n\r\n<mat-dialog-content>\r\n  <mat-form-field>\r\n    <input matInput type=\"text\" id=\"name\" placeholder=\"Nom\" [(ngModel)]=\"subject.name\" name=\"name\">\r\n  </mat-form-field>\r\n  <br>\r\n  <mat-form-field>\r\n    <input matInput type=\"text\" id=\"image\" placeholder=\"Image\" [(ngModel)]=\"subject.image\" name=\"image\">\r\n  </mat-form-field>\r\n  <br>\r\n  <mat-form-field>\r\n    <input matInput type=\"text\" id=\"icon\" placeholder=\"Icone\" [(ngModel)]=\"subject.icon\" name=\"icon\">\r\n  </mat-form-field>\r\n  <br>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions>\r\n  <button mat-raised-button (click)=\"submit()\" color=\"primary\">Sauvegarder</button>\r\n</mat-dialog-actions>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {Ability} from '../ability/ability.component';\r\nimport {SubjectService} from '../../core/services/subject.service';\r\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\r\nimport {AbilityFormComponent} from '../ability-form/ability-form.component';\r\nimport {SubjectFormComponent} from '../subject-form/subject-form.component';\r\n\r\n@Component({\r\n  selector: 'app-subject',\r\n  templateUrl: './subject.component.html',\r\n  styleUrls: ['./subject.component.css']\r\n})\r\nexport class SubjectComponent implements OnInit {\r\n  // New new subject\r\n\r\n  @Input() subject: Subject;\r\n  @Input() logged: boolean;\r\n\r\n  @Output() delete: EventEmitter<Subject> = new EventEmitter<Subject>();\r\n\r\n  dialogref: MatDialogRef<AbilityFormComponent, Ability>;\r\n\r\n  constructor(\r\n    private service: SubjectService,\r\n    private dialog: MatDialog\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  handleAddAbility() {\r\n    this.dialogref = this.dialog.open(AbilityFormComponent, {\r\n      width: '250px',\r\n      data: {\r\n        subjectId: this.subject.id\r\n      }\r\n    });\r\n\r\n    this.dialogref.afterClosed().subscribe(result => {\r\n      if (result && this.subject.abilities.filter(e => e.id === result.id).length === 0) {\r\n        this.subject.abilities.push(result);\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  handleDelete() {\r\n    this.service.delete(this.subject.id).subscribe(() => {\r\n      this.delete.emit(this.subject);\r\n    });\r\n  }\r\n\r\n\r\n  handleUpdateSubject() {\r\n    this.dialog.open(SubjectFormComponent, {\r\n      width: '250px',\r\n      data: {\r\n        subject: this.subject\r\n      }\r\n    });\r\n  }\r\n\r\n  handleDeleteAbility(ability: Ability) {\r\n    this.subject.abilities = this.subject.abilities.filter(e => ability.id !== e.id);\r\n  }\r\n}\r\n\r\nexport class Subject {\r\n  constructor(\r\n    public id?: number,\r\n    public name?: string,\r\n    public icon?: string,\r\n    public image?: string,\r\n    public abilities?: Array<Ability>) {\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>{{subject.name}}</mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content fxLayout=\"row wrap\">\r\n    <div *ngFor=\"let ability of subject.abilities\" fxFlex=\"33.3%\" fxFlex.xs=\"50%\">\r\n      <app-ability (delete)=\"handleDeleteAbility($event)\" [subject]=\"subject\" [ability]=\"ability\"\r\n                   [logged]=\"logged\"></app-ability>\r\n    </div>\r\n  </mat-card-content>\r\n  <mat-card-actions>\r\n    <a mat-button *ngIf=\"logged\" (click)=\"handleAddAbility()\">AJOUTER</a>\r\n    <a mat-button *ngIf=\"logged\" (click)=\"handleUpdateSubject()\">MODIFIER</a>\r\n    <a mat-button *ngIf=\"logged\" class=\"hover-pointer\" (click)=\"handleDelete()\">SUPPRIMER</a>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {Subject} from '../subject/subject.component';\r\nimport {SubjectService} from '../../core/services/subject.service';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {AuthService} from '../../core/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-subjects',\r\n  templateUrl: './subjects.component.html',\r\n  styleUrls: ['./subjects.component.css']\r\n})\r\nexport class SubjectsComponent implements OnInit {\r\n\r\n  public subjects: Array<Subject>;\r\n  public logged: boolean;\r\n  loaded: boolean;\r\n\r\n  constructor(\r\n    private service: SubjectService,\r\n    @Inject(DOCUMENT) private document: Document,\r\n    private auth: AuthService\r\n  ) {\r\n    this.refreshAuth();\r\n    this.loaded = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.subjects = new Array<Subject>();\r\n    this.service.findAll().subscribe(response => {\r\n      this.subjects = response;\r\n      this.loaded = true;\r\n    });\r\n  }\r\n\r\n  refreshAuth() {\r\n    this.logged = this.auth.isAuthenticated();\r\n  }\r\n\r\n  handleDelete(subject: Subject) {\r\n    this.subjects = this.subjects.filter(e => e.id !== subject.id);\r\n  }\r\n}\r\n","<div>\r\n  <h1>Compétences</h1>\r\n  <mat-spinner *ngIf=\"!loaded\"></mat-spinner>\r\n  <div fxLayout=\"row wrap\">\r\n    <section *ngFor=\"let subject of subjects\" fxFlex.sm=\"100%\" fxFlex.xs=\"100%\" fxFlex=\"33%\">\r\n      <app-subject (delete)=\"handleDelete($event)\" [logged]=\"logged\" [subject]=\"subject\"></app-subject>\r\n    </section>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import {Component, Inject} from '@angular/core';\r\nimport {Technology} from '../ability/ability.component';\r\n// import {AbilityService} from '../../core/services/ability.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {TechnologyService} from '../../core/services/technology.service';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-technology-form',\r\n  templateUrl: './technology-form.component.html',\r\n  styleUrls: ['./technology-form.component.css']\r\n})\r\nexport class TechnologyFormComponent {\r\n\r\n  public abilityId: number;\r\n  public technology: Technology;\r\n\r\n  constructor(\r\n    // private abilityService: AbilityService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private technologyService: TechnologyService,\r\n    private dialogRef: MatDialogRef<TechnologyFormComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n  ) {\r\n    this.abilityId = data.abilityId;\r\n    if (data.technology) {\r\n      this.technology = data.technology;\r\n    } else {\r\n      this.technology = new Technology();\r\n    }\r\n  }\r\n\r\n  handleClickSave() {\r\n    if (this.technology.id == null) {\r\n      // this.abilityService.addTechnology(this.abilityId, this.technology).subscribe(result => {\r\n      //   this.dialogRef.close(result);\r\n      // });\r\n    } else {\r\n      this.technologyService.update(this.technology).subscribe(result => {\r\n        this.dialogRef.close(result);\r\n      });\r\n    }\r\n  }\r\n}\r\n","<h1 mat-dialog-title>Ajouter ou modifier une Technologie</h1>\r\n\r\n<mat-card-content>\r\n  <mat-form-field>\r\n    <input matInput type=\"text\" id=\"name\" placeholder=\"Nom\" [(ngModel)]=\"technology.name\" name=\"name\">\r\n  </mat-form-field>\r\n\r\n  <mat-form-field>\r\n    <input matInput type=\"text\" id=\"image\" placeholder=\"Image\" [(ngModel)]=\"technology.image\" name=\"image\">\r\n  </mat-form-field>\r\n</mat-card-content>\r\n\r\n<mat-dialog-actions>\r\n  <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"handleClickSave()\">Sauvgarder</button>\r\n</mat-dialog-actions>\r\n","import { Injectable } from '@angular/core';\nimport {Ability, Technology} from '../../components/ability/ability.component';\nimport {BaseService, Header, GET, ServiceBuilder, Response, Path, PUT, POST, DELETE, Body} from \"ts-retrofit\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AbilityApiService extends BaseService {\n\n  @GET(\"/abilities\")\n  async getAbilities(@Header('Authorization') authorization: string): Promise<Response<Array<Ability>>> {\n    return <Response<Array<Ability>>>{}\n  }\n\n  @GET(\"/subjects/{subjectId}/abilities/{id}\")\n  async getAbility(@Header('Authorization') authorization: string,\n                   @Path(\"subjectId\") subjectId: number,\n                   @Path(\"id\") id: number): Promise<Response<Ability>> {\n    return <Response<Ability>>{}\n  }\n\n  @PUT(\"/subjects/{subjectId}/abilities/{abilityId}\")\n  async updateAbility(@Header('Authorization') authorization: string,\n                      @Path(\"subjectId\") subjectId: number,\n                      @Path(\"id\") id: number,\n                      @Body ability: Ability) {\n    return <Response<Ability>>{}\n  }\n\n  @POST(\"/subjects/{subjectId}/abilities\")\n  async createAbility(@Header('Authorization') authorization: string,\n                      @Path(\"subjectId\") subjectId: number,\n                      @Body ability: Ability){\n    return <Response<Ability>>{}\n  }\n  @DELETE(\"/subjects/{subjectId}/abilities/{abilityId}\")\n  async deleteAbility(@Header('Authorization') authorization: string,\n                      @Path(\"subjectId\") subjectId: number,\n                      @Path(\"id\") id: number){\n\n  }\n}\n\nconst createAbilityApi = (): AbilityApiService => new ServiceBuilder()\n  .setEndpoint(\"\")\n  .setTimeout(4000)\n  .build(AbilityApiService)\n\nexport {createAbilityApi}\n","import { Injectable } from '@angular/core';\nimport {BaseService, Body, Header, Path, POST, Response, ServiceBuilder} from \"ts-retrofit\";\nimport {Ability} from \"../../components/ability/ability.component\";\nimport {Auth} from \"../model/Auth\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthApiService extends BaseService{\n\n  @POST(\"/login\")\n  async authenticate(@Body auth: Auth){\n    return <Response>{}\n  }\n\n}\n\nconst createAuthApi = (): AuthApiService => new ServiceBuilder()\n  .setEndpoint(\"\")\n  .setTimeout(4000)\n  .build(AuthApiService)\n\nexport {createAuthApi}\n","import {Injectable} from '@angular/core';\r\nimport {HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\r\nimport {Observable, of, throwError} from 'rxjs';\r\nimport {catchError} from 'rxjs/operators';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private snackBar: MatSnackBar) {\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const token = sessionStorage.getItem('token');\r\n    if (token != null) {\r\n      req = req.clone({\r\n        setHeaders: {\r\n          Authorization: token\r\n        }\r\n      });\r\n    }\r\n    return next.handle(req).pipe(catchError(e => this.handleAuthError(e)));\r\n  }\r\n\r\n  private handleAuthError(err: HttpErrorResponse): Observable<any> {\r\n    // handle your auth error or rethrow\r\n    if (err.status === 401 || err.status === 403) {\r\n      this.snackBar.open('Mauvais Identifiants');\r\n      setTimeout(() => {\r\n          this.snackBar.dismiss();\r\n        },\r\n        3000);\r\n      return of(err.message);\r\n    }\r\n    return throwError(err);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpResponse} from '@angular/common/http';\r\nimport {AuthApiService} from \"../api/auth-api.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor(private authApi: AuthApiService) {\r\n  }\r\n\r\n  async authenticate(username: string, password: string) {\r\n    const dto = {\r\n      username,\r\n      password\r\n    };\r\n    await this.authApi.authenticate(dto);\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    return sessionStorage.getItem('token') != null;\r\n  }\r\n}\r\n\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Diploma} from '../../components/diplomas/diplomas.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DiplomasService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  create(d: Diploma) {\r\n    return this.http.post<Diploma>(`/diplomas/`, d);\r\n  }\r\n\r\n  findAll() {\r\n    return this.http.get<Diploma[]>(`/diplomas/`);\r\n  }\r\n\r\n  find(id: number) {\r\n    return this.http.get<Diploma>(`/diplomas/${id}`);\r\n  }\r\n\r\n  update(d: Diploma) {\r\n    return this.http.put(`/diplomas/${d.id}`, d);\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete(`/diplomas/${id}`);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FilesService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) {\r\n  }\r\n\r\n  async upload(file: File) {\r\n    const formData = new FormData();\r\n    formData.append('file', file, file.name);\r\n    return await this.http.post(`/files`, formData,\r\n      {\r\n        responseType: 'text'\r\n      }\r\n    ).toPromise();\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Project} from '../../components/project/project.component';\r\nimport {Ability, Technology} from '../../components/ability/ability.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  find(id: number) {\r\n    return this.http.get<Project>(`/projects/${id}`);\r\n  }\r\n\r\n  findAll() {\r\n    return this.http.get<Project[]>(`/projects/`);\r\n  }\r\n\r\n  update(p: Project) {\r\n    return this.http.put(`/projects/${p.id}`, p);\r\n  }\r\n\r\n  addAbility(id: number, a: Ability) {\r\n    return this.http.post(`/projects/${id}/abilities`, a);\r\n  }\r\n\r\n  removeAbility(id: number, idAbility: number) {\r\n    return this.http.delete(`/projects/${id}/abilities/${idAbility}`);\r\n  }\r\n\r\n  addTechnology(id: number, t: Technology) {\r\n    return this.http.post(`/projects/${id}/technologies`, t);\r\n  }\r\n\r\n  removeTechnology(id: number, idTechnology: number) {\r\n    return this.http.delete(`/projects/${id}/technologies/${idTechnology}`);\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete(`/projects/${id}`);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Subject} from '../../components/subject/subject.component';\r\nimport {Ability} from '../../components/ability/ability.component';\r\nimport {Project} from '../../components/project/project.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SubjectService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  findAll() {\r\n    return this.http.get<Subject[]>(`/subjects/`);\r\n  }\r\n\r\n  create(s: Subject) {\r\n    return this.http.post(`/subjects/`, s);\r\n  }\r\n\r\n  find(id: string) {\r\n    return this.http.get<Subject>(`/subjects/${id}`);\r\n  }\r\n\r\n  update(s: Subject) {\r\n    return this.http.put(`/subjects/${s.id}`, s);\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.http.delete(`/subjects/${id}`);\r\n  }\r\n\r\n  addAbility(id: number, ability: Ability) {\r\n    return this.http.post<Ability>(`/subjects/${id}/abilities`, ability);\r\n  }\r\n\r\n  addproject(id: number, project: Project) {\r\n    return this.http.post<Project>(`/subjects/${id}/projects`, project);\r\n  }\r\n\r\n}\r\n\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {Technology} from '../../components/ability/ability.component';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TechnologyService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n\r\n  find(id: number) {\r\n    return this.http.get<Technology>(`/technologies/${id}`);\r\n  }\r\n\r\n  findAll() {\r\n    return this.http.get<Technology[]>(`/technologies/`);\r\n  }\r\n\r\n  update(technology: Technology) {\r\n    return this.http.put(`/${technology.id}`, technology);\r\n  }\r\n\r\n  delete(id) {\r\n    return this.http.delete(`/technologies/${id}`);\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\n\r\n@NgModule({\r\n  imports: [MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatProgressSpinnerModule,\r\n    MatSelectModule,\r\n    MatTooltipModule,\r\n    MatDialogModule, MatButtonModule, MatListModule, MatIconModule],\r\n  exports: [MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatProgressSpinnerModule,\r\n    MatSelectModule,\r\n    MatTooltipModule,\r\n    MatDialogModule, MatButtonModule, MatListModule, MatIconModule]\r\n})\r\nexport class MaterialModule {\r\n\r\n}\r\n","export const environment = {\r\n  production: false\r\n};\r\n","import {enableProdMode} from '@angular/core';\r\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\r\n\r\nimport {AppModule} from './app/app.module';\r\nimport {environment} from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */"]}